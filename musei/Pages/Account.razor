@page "/account"
@using Radzen
@using musei.Data
@using Microsoft.Maui.Graphics
@using Microsoft.Maui.Layouts
@inject CosmosService cs
@inject Session sess

@if (sess.currentUser == null)
{
    <div>
        @if (loggingIn)
        {
            <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
        }
        <RadzenText TextStyle="TextStyle.H3" TextAlign="TextAlign.Center">Musei Fantastici</RadzenText>
        <RadzenText TextStyle="TextStyle.Body1" TextAlign="TextAlign.Center"><br />Log in with your account and catch up on events personalized to you!</RadzenText>
        <div class="container-fluid">
            <div class="row d-flex px-3">
                <div class="col-xl-6 p-3">
                    <RadzenCard class="p-5">
                        <RadzenText TextStyle="TextStyle.H5" TagName="TagName.H2" Class="mb-4">
                        </RadzenText>
                        <RadzenTemplateForm Data=@("LoginWithRegisterAndReset")>

                            <RadzenLogin LoginText="Log In" Login=@(args => OnLogin(args))
                                         ResetPassword=@(args => OnResetPassword(args, "Login with register and password reset"))
                                         Register=@(args => OnRegister("Login with register and password reset")) />
                        </RadzenTemplateForm>
                    </RadzenCard>
                </div>

            </div>
        </div>
    </div>
}
else
{
    <br />

    <h3 style="text-align:center">Your Account</h3>

    <br />

    <div class="flexRow" style="justify-content:space-evenly">
        <RadzenText TextAlign="TextAlign.Left">
            <RadzenButton Variant="Variant.Flat" Click=@(args => OnResetPassword("reset password")) Text="Reset Password"
                          ButtonStyle="ButtonStyle.Danger" />
        </RadzenText>
        <RadzenText TextAlign="TextAlign.Right">
            <RadzenButton Variant="Variant.Flat" Click=@(args => OnLogout("logging out")) Text="Log Out"
                          ButtonStyle="ButtonStyle.Danger" />
        </RadzenText>
    </div>

    <br />

    <RadzenCard Class="rz-background-color-primary-lighter rz-shadow-0 rz-border-radius-0"
                style="margin: 0 calc(-1 * var(--rz-card-padding)); padding: 2rem;">
        <div>
            <RadzenText TextStyle="TextStyle.H6" Class="rz-color-primary-light"><strong>Personal Information</strong></RadzenText>
            <RadzenText TextStyle="TextStyle.H5">Name: @sess.currentUser.name</RadzenText>
            <RadzenText TextStyle="TextStyle.H5">Birthday: @sess.currentUser.birthDate.ToLongDateString()</RadzenText>
            <RadzenText TextStyle="TextStyle.H5">Email: @sess.currentUser.id</RadzenText>
        </div>
    </RadzenCard>

    <RadzenCard Class="rz-background-color-primary-lighter rz-shadow-0 rz-border-radius-0"
                style="margin: 0 calc(-1 * var(--rz-card-padding)); padding: 2rem;">
        <div>
            <RadzenText TextStyle="TextStyle.H6" Class="rz-color-primary-light"><strong>Your Booking(s)</strong></RadzenText>
            @for (int i = 0; i < sess.currentUser.eventBookings.Count; i++)
            {
                <BookingCard b=@sess.currentUser.eventBookings[i]/>

            }
        </div>

    </RadzenCard>
}



@code{
    public bool loggingIn = false;

    async void OnResetPassword(string buttonName)
    {
        await App.Current.MainPage.Navigation.PushAsync(new xChangePassword());
    }

    void OnLogout(string buttonName)
    {
        sess.currentUser = null;
    }

    async void OnLogin(LoginArgs args)
    {
        loggingIn = true;
        sess.currentUser = await cs.LoginUser(args.Username);
        StateHasChanged();
        loggingIn = false;
    }

    async void OnRegister(string name)
    {
        await App.Current.MainPage.Navigation.PushAsync(new xSignUp());
    }

    async void OnResetPassword(string value, string name)
    {
        await App.Current.MainPage.Navigation.PushAsync(new xForgotPassword());
    }
}